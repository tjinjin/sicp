#lang racket

(define (inc a) (+ a 1))
(define (dec a) (- a 1))
; A
(define (+ a b)
  (if (= a 0) b (inc (+ (dec a) b))))
; B
(define (+ a b)
  (if (= a 0) b (+ (dec a) (inc b))))

; Aは
; (+ 4 5)
; (if (= 4 0) 5 (inc (+ (dec 4) 5)))
; (if (= 4 0) 5 (inc (+ (dec 4) 5)))
; (if (#F) 5 (inc (+ (dec 4) 5)))
; (if (#F) 5 (inc (+ (- 4 1) 5)))
; (if (#F) 5 (inc (+ 3 5)))
; (if (#F) 5 (inc 8))
; (if (#F) 5 (+ 8 1))
; (if (#F) 5 (9))
; 9
; Bは
; (+ 4 5)
; (if (= 4 0) 5 (+ (dec 4) (inc 5)))
; (if (#F) 5 (+ (dec 4) (inc 5)))
; (if (#F) 5 (+ ((- 4 1)) ((+ 5 1))))
; (if (#F) 5 (+ (3) (6)))
; (if (#F) 5 (9))
; 9
; Aは反復、Bは再帰プロセスだと思う
; Aは小さい所から関数を展開していっていて、それをどんどん使いまわしている感じがある
; Bはそれぞれが計算を実施して、その結果を使っている感じでそれぞれが状態を持っている感じがする？

; Answer
; 全然プロセスが違う。。。

; (+ 4 5)
; (inc (+ (dec 4) 5))
; (inc (+ (- 4 1) 5))
; (inc (+ 3 5))
; (inc (inc (+ (dec 3) 5)))
; (inc (inc (+ (- 3 1) 5)))
; (inc (inc (+ 2 5)))
; (inc (inc (inc (+ (dec 2) 5))))
; (inc (inc (inc (+ (- 2 1) 5))))
; (inc (inc (inc (+ 1 5))))
; (inc (inc (inc (inc (+ (dec 1) 5)))))
; (inc (inc (inc (inc (+ (- 1 1) 5)))))
; (inc (inc (inc (inc (+ 0 5)))))
; (inc (inc (inc (inc 5))))
; (inc (inc (inc (+ 5 1))))
; (inc (inc (inc 6)))
; (inc (inc (+ 6 1)))
; (inc (inc 7))
; (inc (+ 7 1))
; (inc 8)
; (+ 8 1)
; 9

; (+ 4 5)
; (+ (dec 4) (inc 5))
; (+ (- 4 1) (+ 5 1))
; (+ 3 6)
; (+ (dec 3) (inc 6))
; (+ (- 3 1) (+ 6 1))
; (+ 2 7)
; (+ (dec 2) (inc 7))
; (+ (- 2 1) (+ 7 1))
; (+ 1 8)
; (+ (dec 1) (inc 8))
; (+ (- 1 1) (+ 8 1))
; (+ 0 9)
; 9

; 考察
; + を再定義しているのを理解してなかった？
; 問題の意図を勘違いした？
